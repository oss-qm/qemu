#!/usr/bin/make -f
SHELL = /bin/sh -e

# get DEB_VERSION
include /usr/share/dpkg/pkg-info.mk
# get DEB_HOST_ARCH DEB_HOST_ARCH_OS DEB_HOST_GNU_TYPE DEB_HOST_MULTIARCH DEB_BUILD_GNU_TYPE
include /usr/share/dpkg/architecture.mk
# get CFLAGS LDFLAGS etc
include /usr/share/dpkg/buildflags.mk

ifeq ($(shell dpkg-vendor --derives-from Ubuntu && echo yes),yes)
VENDOR := UBUNTU
DEB_BUILD_PARALLEL = yes
else
VENDOR := DEBIAN
endif

# support parallel build using DEB_BUILD_OPTIONS=parallel=N
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
  MAKEFLAGS += -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# verbose build
V ?= 1

# list of packages we're supposed to build
BUILD_PACKAGES = $(call dpkg_late_eval,BUILD_PACKAGES,dh_listpackages)

DATAPATH = /usr/share/qemu:/usr/share/seabios:/usr/lib/ipxe/qemu

# we add another set of configure options from debian/control
common_configure_opts = \
	--with-pkgversion="Debian $(DEB_VERSION)" \
	--extra-cflags="$(CFLAGS) $(CPPFLAGS) -DCONFIG_QEMU_DATAPATH='\"${DATAPATH}\"' -DVENDOR_$(VENDOR)" \
	--extra-ldflags="$(LDFLAGS) -Wl,--as-needed" \
	--prefix=/usr \
	--sysconfdir=/etc \
	--libdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
	--libexecdir=/usr/lib/qemu \
	--localstatedir=/var \
	--disable-smartcard \
	--disable-blobs \
	--disable-strip \
	--with-system-pixman \
	--interp-prefix=/etc/qemu-binfmt/%M \
	--localstatedir=/var \
	--enable-debug \

# Cross compiling support
ifneq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
common_configure_opts  += --cross-prefix=$(DEB_HOST_GNU_TYPE)-
endif

# list of system (softmmu) targets, from ./configure
system_targets = \
 i386 x86_64

# qemu-system subpackages, from d/control
sys_systems = x86
systems = ${sys_systems} misc
sysarch_arm   = $(filter aarch64 arm,${system_targets})
sysarch_mips  = $(filter mips mipsel mips64 mips64el,${system_targets})
sysarch_ppc   = $(filter ppc ppc64 ppcemb,${system_targets})
sysarch_sparc = $(filter sparc sparc64,${system_targets})
sysarch_x86   = $(filter i386 x86_64,${system_targets})
sysarch_misc  = $(filter-out $(foreach s,${sys_systems},${sysarch_$s}),${system_targets})

configure-stamp: configure
	dh_testdir

	# system build
	rm -rf qemu-build; mkdir qemu-build
	cd qemu-build && \
	    ../configure ${common_configure_opts} --disable-user \
		--enable-system \
		--enable-modules \
		--target-list="$(addsuffix -linux-user,${user_targets})" \
		$(shell sh debian/extract-config-opts \
		    $(DEB_HOST_ARCH_OS)-$(DEB_HOST_ARCH) debian/control) \
		$(QEMU_CONFIGURE_OPTIONS) || \
	 { echo ===== CONFIGURE FAILED ===; tail -n 50 config.log; exit 1; }
	touch $@

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp: configure-stamp
	dh_testdir

	# system and utils build
	# XXhack alert: opengl libs includes libdrm which is not needed
	$(MAKE) -C qemu-build V=${V} OPENGL_LIBS="-lepoxy -lgbm -lX11"
	dtc -o qemu-build/pc-bios/bamboo.dtb pc-bios/bamboo.dts

	touch $@

override_dh_auto_clean: debian/control
	dh_auto_clean
	dh_testdir
	rm -rf qemu-build user-static-build
	rm -f configure-stamp build-stamp
	find scripts/ -name '*.pyc' -delete || :
	dh_clean

clean:
	dh clean
#clean:	debian/control
#	dh_testdir
#	rm -rf qemu-build user-static-build
#	rm -f configure-stamp build-stamp
#	find scripts/ -name '*.pyc' -delete || :
#	dh_clean

# define ${ai} variable to be one of -i (indep), -a (arch) or nothing (both)
ai :=
binary-indep: ai := -i
binary-indep: install
binary-arch: ai := -a
binary-arch: install
binary: install

define inst-system
	mkdir -p debian/qemu-system-$1/usr/share/man/man1 debian/qemu-system-$1/usr/bin
	for t in ${sysarch_$1}; do \
	    mv debian/tmp/usr/bin/qemu-system-$$t debian/qemu-system-$1/usr/bin/; \
	    echo ".so man1/qemu-system.1" > debian/qemu-system-$1/usr/share/man/man1/qemu-system-$$t.1; \
	done
	echo sysarch:$1=\
$(if $(wordlist 10,20,${sysarch_$1}),\
$(wordlist 1,8,${sysarch_$1})\$${Newline}   $(wordlist 9,20,${sysarch_$1}),\
${sysarch_$1}) \
> debian/qemu-system-$1.substvars
	echo sysprovides:$1=${addprefix qemu-system-,${filter-out $1,${sysarch_$1}}} | \
	  sed -e 's/ /, /g' -e 'y/_/-/' >> debian/qemu-system-$1.substvars
	dh_link -pqemu-system-$1 usr/share/doc/qemu-system-common usr/share/doc/qemu-system-$1/common

endef

install: build-stamp
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs -a

	# system and utils install
	$(MAKE) -C qemu-build DESTDIR=$(CURDIR)/debian/tmp install

	# qemu-system subpackages
	mv debian/tmp/usr/share/man/man1/qemu.1 debian/tmp/usr/share/man/man1/qemu-system.1
	$(foreach s,${systems},$(call inst-system,$s))

ifeq ($(DEB_HOST_ARCH_OS),linux)

# virtfs-proxy-helper and qemu-bridge-helper are linux-specific
	for f in usr/bin/virtfs-proxy-helper \
	         usr/share/man/man1/virtfs-proxy-helper.1 \
		 usr/lib/qemu/qemu-bridge-helper \
	; do \
	  mkdir -p debian/qemu-system-common/$${f%/*} ; \
	  mv debian/tmp/$$f debian/qemu-system-common/$$f ; \
	done

endif # linux

# install whole thing so --list-missing works right
	dh_install --list-missing
# install the rest for arch/indep as needed
	dh_installdocs ${ai} -Nqemu-user-binfmt
	dh_installchangelogs ${ai} -Nqemu-user-binfmt
	dh_installdocs ${ai} -pqemu-user-binfmt --link-doc=qemu-user
	dh_installman ${ai}
	dh_installudev ${ai}
ifneq (${ai},-i)	# do not run this for binary-indep
# qemu-ifup is arch-specific
	install -D debian/qemu-ifup.$(DEB_HOST_ARCH_OS) \
		debian/qemu-system-common/etc/qemu-ifup
	dh_installinit -pqemu-guest-agent
endif
	dh_link ${ai}
	dh_strip ${ai}
	dh_compress ${ai}
	dh_fixperms ${ai}
	dh_makeshlibs ${ai}
	dh_shlibdeps ${ai}
	dh_installdeb ${ai}
	dh_gencontrol ${ai}
	dh_md5sums ${ai}
	dh_builddeb ${ai}

# only include rules for debian/control if debian/control-in is present
debian/control: debian/control-in debian/rules
	sed -e 's/^:$(shell echo ${VENDOR} | tr '[A-Z]' '[a-z]')://' \
		-e '/^:[a-z]*:/D' $< > $@.tmp
	mv -f $@.tmp $@

.PHONY: build clean binary-indep binary-arch binary install get-orig-source

